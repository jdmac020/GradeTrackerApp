@model GradeTrackerApp.Models.Course.CourseViewModel

@{
    ViewBag.Title = "Course Details";
}

<style>

    #evaluationTable {
         width: 35%;
    }

    #evaluationTable th {
         font-size: larger;
        padding-bottom: 5px;
        width: 30%;
        text-align: center
    }

    #evaluationTable td {
        padding-bottom: 5px;
        padding-left: 10px
    }

    #details td {
        padding-bottom: 5px; 
        padding-left: 10px
    }

    .detail {
        padding-left: 10px
    }

    #evaluationTable td#grade {
        text-align: center
    }

    #details th {
         font-size: larger;
    }

</style>

<h2>@Model.Name: @Model.Department-@Model.Number</h2>

<div id="details">

    <h3>Details</h3>

    <table>
        
        <tr>
            <th>@Html.LabelFor(model => model.Semester)</th>
            
        </tr>
        <tr>
            <td>@Html.DisplayFor(model => model.SemesterName)</td>
            
        </tr>
        <tr>
            <th>@Html.LabelFor(model => model.Year)</th>
        </tr>
        <tr>
            <td>@Html.DisplayFor(model => model.Year)</td>
        </tr>
    </table>
</div>

<div id="grades">

    <h3>Grade Info</h3>

    @if (Model.Evaluations.Count > 0)
    {
        <table id="evaluationTable">
            <tr>
                <th>Type</th>
                <th> Current Grade</th>
                <th colspan="3">Options</th>
            </tr>
            @foreach (var evaluation in Model.Evaluations)
            {

                <tr>
                    <td>
                        @(evaluation.Name)
                    </td>
                    <td id="grade">
                        @evaluation.CurrentPointsGrade
                    </td>
                    <td>
                        @Html.ActionLink($"View", "ViewEvaluation", "Evaluation", routeValues: new { evaluationId = evaluation.Id }, htmlAttributes: null)
                    </td>
                    <td>
                        @Html.ActionLink("Edit", "EditEvaluation", "Evaluation", routeValues: new { evaluationId = evaluation.Id }, htmlAttributes: null)
                    </td>
                    @*<td>
                        @Html.ActionLink("Delete", "DeleteEvaluation", "Evaluation", routeValues: new { evaluationId = evaluation.Id }, htmlAttributes: null)
                    </td>*@
                </tr>
            }
        </table>
        @Html.ActionLink("Add Another Evaluation Type", "AddEvaluation", "Evaluation", routeValues: new { courseId = Model.Id }, htmlAttributes: null)
        <h4>Current Overall Grade: @Model.CurrentGrade</h4>
        <hr />

    }
    else
    {
        <p>There are no Evaluations associated with this course yet -- @Html.ActionLink("Add One!", "AddEvaluation", "Evaluation", routeValues: new { courseId = Model.Id }, htmlAttributes: null)</p>
    }

</div>

<div id="miscinfo">

    <h3>Misc Info</h3>

    <table>
        <tr>
            <th>
                @Html.LabelFor(model => model.LastModified)
            </th>
        </tr>
        <tr>
            <td class="detail">

                    @Model.LastModified.ToShortDateString()
                    @Model.LastModified.ToShortTimeString()

            </td>
        </tr>
    </table>
</div>



<div id="options">
    
    <h3>Options</h3>

    <table>
        <tr>
            <th>
                @Html.ActionLink("Make Changes To This Course", "EditCourse", "Course", routeValues: new {courseId = Model.Id}, htmlAttributes: null)
            </th>
        </tr>
        <tr>
            <th>
                <a class="delete-course-link" href='@Url.Action("DeleteCourse", "Course", routeValues: new {courseId = Model.Id})'>Delete This Course</a>
                <div class="btn btn-primary delete-course-confirm" style="display:none" data-delete-id="@Model.Id"><span>You Sure, Sis?</span></div>
                @*@Html.ActionLink("Delete This Course", "DeleteCourse", "Course", routeValues: new { courseId = Model.Id }, htmlAttributes: null)*@
            </th>
        </tr>
        <tr>
            <th>
                @Html.ActionLink("Back to Your Courses", "AllCourses", "Course", routeValues: null, htmlAttributes: null)
            </th>
        </tr>
    </table>
</div>

@section scripts{

    <script type="text/javascript">
        
        $(function () {

            $("a.delete-course-link").click(function () {

                var buttonChange = false;
                var mouseOffCount = 0;

                var deleteLink = $(this);
                deleteLink.hide();
                var confirmButton = deleteLink.siblings(".delete-course-confirm");
                confirmButton.show();

                var cancelDelete = function() {
                    removeEvents();
                    showDeleteLink();
                    buttonChange = false;
                    mouseOffCount = 0;
                };

                var deleteItem = function() {

                    window.location.href = '@Url.Action("DeleteCourse", "Course", routeValues: new { courseId = Model.Id})';

                };

                var removeEvents = function() {
                    confirmButton.off("click", deleteItem);
                    $(document).on("click", cancelDelete);
                    $(document).off("keypress", onKeyPress);
                };

                var showDeleteLink = function() {
                    confirmButton.hide();
                    deleteLink.show();
                };

                var onKeyPress = function(e) {
                    //Cancel if escape key pressed
                    if (e.which === 27) {
                        cancelDelete();
                    }
                };

                var mouseOn = function() {

                    if (mouseOffCount === 0) {
                        

                    } else if (buttonChange === false) {

                        confirmButton.text('Yes! Kill It With Fire');
                        buttonChange = true;

                    } 
                    
                };

                var mouseOff = function() {

                    if (mouseOffCount === 0) {

                        mouseOffCount++;

                    } else if (buttonChange === true) {

                        confirmButton.text('You Sure, Sis?');
                        buttonChange = false;

                    }
                };

                confirmButton.on("mouseover", mouseOn);
                confirmButton.on("mouseout", mouseOff);
                confirmButton.on("click", deleteItem);
                $(document).on("click", cancelDelete);
                $(document).on("keypress", onKeyPress);

                return false;
            });
        });

    </script>
}